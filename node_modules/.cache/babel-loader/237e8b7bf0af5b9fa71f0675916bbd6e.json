{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport update from 'immutability-helper';\n/**\n * Add item to state\n */\n\nexport var addItem = function addItem(item) {\n  item.status = 'pending';\n  item.id = Math.random();\n  return {\n    type: actionTypes.ADD_ITEM,\n    payload: item\n  };\n};\nexport var updateItems = function updateItems(items) {\n  return {\n    type: actionTypes.CHANGE_STATUS,\n    payload: items\n  };\n};\n/**\n * Upadate item status on click\n */\n\nexport var changeItemStatus = function changeItemStatus(itemId) {\n  return function (dispatch, getState) {\n    var items = getState().item.items; // const selectedIndex = items.findIndex(function(item) { \n    //     return item.id === itemId; \n    // });\n    // const selectedItem = items[selectedIndex];\n\n    var selectedIndex = 0;\n    var selectedItem = '';\n    items.map(function (item, itemIndex) {\n      if (item.id === itemId) {\n        selectedItem = item;\n        selectedIndex = itemIndex;\n      }\n    });\n    selectedItem.status = selectedItem.status === 'pending' ? 'completed' : 'pending';\n    var updatedComment = update(items[selectedIndex], {\n      $set: selectedItem\n    });\n    var newItems = update(items, {\n      $splice: [[selectedIndex, 1, updatedComment]]\n    });\n    dispatch(updateItems(newItems));\n  };\n};","map":{"version":3,"sources":["/Users/rayeespk/workspace/react/assessment/src/store/actions/item.js"],"names":["actionTypes","update","addItem","item","status","id","Math","random","type","ADD_ITEM","payload","updateItems","items","CHANGE_STATUS","changeItemStatus","itemId","dispatch","getState","selectedIndex","selectedItem","map","itemIndex","updatedComment","$set","newItems","$splice"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA;;;;AAGA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7BA,EAAAA,IAAI,CAACC,MAAL,GAAc,SAAd;AACAD,EAAAA,IAAI,CAACE,EAAL,GAAUC,IAAI,CAACC,MAAL,EAAV;AACA,SAAO;AACHC,IAAAA,IAAI,EAAER,WAAW,CAACS,QADf;AAEHC,IAAAA,OAAO,EAAEP;AAFN,GAAP;AAIH,CAPM;AASP,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAClC,SAAO;AACHJ,IAAAA,IAAI,EAAER,WAAW,CAACa,aADf;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP;;;;AAIA,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACxC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAE3B,QAAML,KAAK,GAAGK,QAAQ,GAAGd,IAAX,CAAgBS,KAA9B,CAF2B,CAG3B;AACA;AACA;AACA;;AAEA,QAAIM,aAAa,GAAG,CAApB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,UAACjB,IAAD,EAAOkB,SAAP,EAAqB;AAC3B,UAAIlB,IAAI,CAACE,EAAL,KAAYU,MAAhB,EAAwB;AACpBI,QAAAA,YAAY,GAAGhB,IAAf;AACAe,QAAAA,aAAa,GAAGG,SAAhB;AACH;AACJ,KALD;AAOAF,IAAAA,YAAY,CAACf,MAAb,GAAsBe,YAAY,CAACf,MAAb,KAAwB,SAAxB,GAAoC,WAApC,GAAkD,SAAxE;AACA,QAAIkB,cAAc,GAAGrB,MAAM,CAACW,KAAK,CAACM,aAAD,CAAN,EAAuB;AAAEK,MAAAA,IAAI,EAAEJ;AAAR,KAAvB,CAA3B;AAEA,QAAIK,QAAQ,GAAGvB,MAAM,CAACW,KAAD,EAAQ;AACzBa,MAAAA,OAAO,EAAE,CAAC,CAACP,aAAD,EAAgB,CAAhB,EAAmBI,cAAnB,CAAD;AADgB,KAAR,CAArB;AAIAN,IAAAA,QAAQ,CAACL,WAAW,CAACa,QAAD,CAAZ,CAAR;AACH,GAzBD;AA0BH,CA3BM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport update from 'immutability-helper';\n\n/**\n * Add item to state\n */\nexport const addItem = (item) => {\n    item.status = 'pending';\n    item.id = Math.random();\n    return {\n        type: actionTypes.ADD_ITEM,\n        payload: item\n    };\n};\n\nexport const updateItems = (items) => {\n    return {\n        type: actionTypes.CHANGE_STATUS,\n        payload: items,\n    };\n};\n\n/**\n * Upadate item status on click\n */\n\nexport const changeItemStatus = (itemId) => {\n    return (dispatch, getState) => {\n\n        const items = getState().item.items;\n        // const selectedIndex = items.findIndex(function(item) { \n        //     return item.id === itemId; \n        // });\n        // const selectedItem = items[selectedIndex];\n\n        let selectedIndex = 0;\n        let selectedItem = '';\n        items.map((item, itemIndex) => {\n            if (item.id === itemId) {\n                selectedItem = item;\n                selectedIndex = itemIndex;\n            }\n        })\n\n        selectedItem.status = selectedItem.status === 'pending' ? 'completed' : 'pending';\n        var updatedComment = update(items[selectedIndex], { $set: selectedItem });\n\n        var newItems = update(items, {\n            $splice: [[selectedIndex, 1, updatedComment]]\n        });\n\n        dispatch(updateItems(newItems));\n    };\n};\n"]},"metadata":{},"sourceType":"module"}