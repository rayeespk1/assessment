{"ast":null,"code":"import _defineProperty from \"/Users/rayeespk/workspace/react/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rayeespk/workspace/react/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rayeespk/workspace/react/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rayeespk/workspace/react/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/rayeespk/workspace/react/assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/rayeespk/workspace/react/assessment/src/components/addItem/add.js\";\nimport React, { Component } from 'react';\nimport Spinner from '../ui/spinner/spinner';\nimport Input from '../ui/input/input';\nimport Button from '../ui/button/button';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nvar Add = /*#__PURE__*/function (_Component) {\n  _inherits(Add, _Component);\n\n  var _super = _createSuper(Add);\n\n  function Add() {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      controls: {\n        title: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Item Name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        comments: {\n          elementType: 'textarea',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Comments'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      _this.props.addItem({\n        title: _this.state.controls.title.value,\n        comments: _this.state.controls.comments.value\n      });\n    };\n\n    _this.inputChangedHandler = function (event, controlName) {\n      var updatedControls = updateObject(_this.state.controls, _defineProperty({}, controlName, updateObject(_this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.controls[controlName].validation),\n        touched: true\n      })));\n\n      _this.setState({\n        controls: updatedControls\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        });\n      });\n\n      if (this.props.loading) {\n        form = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 20\n          }\n        });\n      }\n\n      var errorMessage = null;\n\n      if (this.props.error) {\n        errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, this.props.error.message);\n      }\n\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"item-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Enter Item Details\"), errorMessage, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, form, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"close-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"close-link\",\n        onClick: this.closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \"SAVE\"))));\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport default Add;","map":{"version":3,"sources":["/Users/rayeespk/workspace/react/assessment/src/components/addItem/add.js"],"names":["React","Component","Spinner","Input","Button","updateObject","checkValidity","Add","state","controls","title","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","comments","submitHandler","event","preventDefault","props","addItem","inputChangedHandler","controlName","updatedControls","target","setState","formElementsArray","key","push","id","config","form","map","formElement","loading","errorMessage","error","message","closeModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from '../ui/spinner/spinner';\nimport Input from '../ui/input/input';\nimport Button from '../ui/button/button';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nclass Add extends Component {\n\n    state = {\n        controls: {\n            title: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Item Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            comments: {\n                elementType: 'textarea',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Comments'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            }\n        }\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.addItem({ title: this.state.controls.title.value, comments: this.state.controls.comments.value });\n    };\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            })\n        });\n        this.setState({ controls: updatedControls });\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        return (\n            <section className=\"item-form\">\n                <h3>Enter Item Details</h3>\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <div className=\"close-container\">\n                        <p className=\"close-link\" onClick={this.closeModal}>Cancel</p>\n                        <Button btnType=\"Success\">SAVE</Button>\n                    </div>\n                </form>\n            </section>\n        );\n    }\n\n}\n\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}